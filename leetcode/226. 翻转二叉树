/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        // if(root == NULL)
        // {
        //     return NULL;
        // }
        // TreeNode *ptmpNode = root->left;
        // root->left = invertTree(root->right);
        // root->right = invertTree(ptmpNode);
        // return root;
        
        //层序遍历二叉树，交换根节点的左右子节点
        //交换第二层每个节点的左右子节点，依次
        queue<TreeNode*> tree_queue;
        if(root == NULL)
        {
            return root;
        }
        tree_queue.push(root);
        while(tree_queue.size() > 0)
        {
            TreeNode *pNode = tree_queue.front();
            tree_queue.pop();
            TreeNode *pLeft = pNode->left;
            pNode->left = pNode->right;
            pNode->right = pLeft;
            if(pNode->left)
            {
                tree_queue.push(pNode->left);
            }
            if(pNode->right)
            {
                tree_queue.push(pNode->right);
            }
            
        }
        return root;

    }
};
